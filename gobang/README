qt实现的电脑端客户端：
	board类是整个游戏客户端的主体，负责棋盘的绘制，接收鼠标的点击事件
	gamedata类负责存储游戏棋子的位置坐标，下棋的双方ID，下棋的步骤
	login类负责登录的判断，和账号的注册
	choosePattern类负责选择游戏的对战模式
	mainWnd类负责显示被选中的游戏模式
	networkPlayer类负责网络对战的实现
	humanComputerPlay类负责人机的对战实现

	board类将主体的棋盘棋子进行绘制，并添加悔棋、开始、时间、头像、昵称的按钮和标签，同时实现悔棋，开始的槽函数，
		在开始游戏后，启动定时器，并且鼠标响应事件有效运行，每一次下棋都会判断输赢。为其他的类继承提供虚函数，
		重新设置标签的位置大小内容，重写开始的槽函数，重点重写鼠标响应事件实现对棋盘的输入。

网络模块的工作流程与实现：
	进入网络对战后，将网络连接标志，游戏匹配标志，游戏开始标志，等待队列标志，游戏切换标志初始化，当点击匹配按钮
	后，向服务器发送数据，接收数据进行处理，直到匹配成功，然后点击开始按钮两端同时开始计时并且可以进行下棋，
	中途可以聊天可以悔棋，游戏结束后弹出是否要继续和这个玩家游戏的对话框，然后根据选择恢复到匹配之前或者开始之前

学习到的：
	内存管理，qt的运行模式是什么，类之间的继承与重载是如何实现多态的，new出来的内存如何释放，窗体和程序之间的关系是什么。
	变量的命名过于随意，没有统一的标准，变量的多少和子程序的长度没有很好的把握，函数的设计没有详细的文档，没有对参数和变量
	进行const等约束。
	窗体之间的数据传递，qt的函数库的功能都不了解。
	
下个版本的内容：
	发送图片的功能没有实现。

